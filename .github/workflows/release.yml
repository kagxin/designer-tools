# This is a basic workflow to help you get started with Actions
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release
jobs:
  run_build:
    name: Run Test
    runs-on: ubuntu-latest
    container: golang:1.14

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go env -w GO111MODULE=on && go mod tidy

      - name: Go Build
        run: make
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./mktxt.exe
          asset_name: mktxt.exe
          asset_content_type: application/octet-stream